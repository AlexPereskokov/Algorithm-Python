# Произведём обычную сортировку пузырьком, с небольшим изменением
# 9 строка - позволяет использовать метод копирования
# 14 строка, если мы знаем сколько надо сделать шагов, зачем использовать while
# 15 строка, вводим переменную для отслеживания изменений внутреннего цикла
# 19 строка, если внутренний цикл не сделал ни одной замены - массив отсортирован, зачем дальше его прогонять - выводим
# 23 строка, красивый вывод для отслеживания работы сортировки
# 26 строка, соответсвие условию (-100 выходит, 99 крайнее возможное положительное число)
import random
from copy import copy


def bubble_sort(data):
    array = data
    for i in range(1, len(array)):
        _array_check = copy(array)
        for j in range(len(array) - 1):
            if array[j] < array[j+1]:
                array[j], array[j + 1] = array[j + 1], array[j]
        if _array_check == array:
            print(f' Отсортированный массив имеет вид {array}')
            break
        else:
            print(f' {i} итерация сортировки, массив выглядит так {array}')


rand_mas = [random.randint(-100, 99) for _ in range(10)]
print(f' Исходный сгенерированный массив {rand_mas}')
bubble_sort(rand_mas)
