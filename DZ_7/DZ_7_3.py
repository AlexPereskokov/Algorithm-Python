# Данная задача легко решается всеми возможными сортировками
# Где уже в отсортированном массиве находится серединный элемент
# Я решил её методами, ибо мы их не изучали, а вещь достаточно внутренняя, быстрая и интересная
# Даём пользователю ввести m, заполняем нечётный массив любыми переменными(как кому по душе)
# Функция принимает массив и начинает геноцид по великанам и карликам
# Окончив акт мы имеем 1 элемент массива
# Тот самый элемент и был медианой, поскольку стоял между великанами и карликами
import random


def find_median(array):
    while len(array) > 1:
        _max_del = array.pop(array.index(max(array)))
        _min_del = array.pop(array.index(min(array)))
        print(f' Удаляем максимум {_max_del} и минимум {_min_del}')
        print(f' Промежуточный массив стал: {array}')
    print(f' Найденная медиана равна: {array[0]}')


m = int(input(' Массив имеет размер 2m +1 \n Введите натуральное число m: '))
rand_mas = [random.randint(-50, 50) for _ in range(2*m + 1)]
print(f' Исходный сгенерированный массив {rand_mas}')
find_median(rand_mas)
